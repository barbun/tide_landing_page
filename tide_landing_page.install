<?php

/**
 * @file
 * Tide Landing Page install.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\workflows\Entity\Workflow;

/**
 * Implements hook_install().
 */
function tide_landing_page_install() {
  // Enable Editorial workflow if workflow module is enabled.
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('workflows')) {
    $editorial_workflow = Workflow::load('editorial');
    if ($editorial_workflow) {
      $editorial_workflow->getTypePlugin()->addEntityTypeAndBundle('node', 'landing_page');
      $editorial_workflow->save();
    }
  }

  // Retroactively support existing content types in the Referred Content
  // field of Card automated paragraphs.
  $supported_paragraph_types = [
    'card_navigation_featured_auto',
    'card_navigation_auto',
    'card_promotion_auto',
  ];
  foreach ($supported_paragraph_types as $supported_paragraph_type) {
    $field_config = FieldConfig::loadByName("paragraph", $supported_paragraph_type, "field_paragraph_reference");
    if ($field_config) {
      $handler_settings = $field_config->getSetting('handler_settings');
      $info = \Drupal::service('entity_type.bundle.info')->getAllBundleInfo();
      foreach ($info as $type => $bundles) {
        if ($type == 'node') {
          foreach (array_keys($bundles) as $bundle) {
            $handler_settings['target_bundles'][$bundle] = $bundle;
          }
        }
      }
      $field_config->setSetting('handler_settings', $handler_settings);
      $field_config->save();
    }
  }
}

/**
 * Implements hook_update_dependencies().
 */
function tide_landing_page_update_dependencies() {
  $dependencies['tide_landing_page'][8001] = ['tide_core' => 8001];
  $dependencies['tide_landing_page'][8002] = ['tide_core' => 8002];
  return $dependencies;
}

/**
 * Refactor Show Social Sharing field.
 */
function tide_landing_page_update_8001() {
  module_load_include('inc', 'tide_core', 'includes/helpers');
  $config_location = [drupal_get_path('module', 'tide_landing_page') . '/config/install'];
  _tide_import_single_config('field.field.node.landing_page.field_show_social_sharing', $config_location);

  $pages = \Drupal::entityTypeManager()->getStorage('node')
    ->loadByProperties(['type' => 'landing_page']);
  if ($pages && count($pages)) {
    /** @var \Drupal\node\Entity\Node $node */
    foreach ($pages as $node) {
      if ($node->hasField('field_show_social_sharing') && $node->hasField('field_landing_page_show_social')) {
        $node->set('field_show_social_sharing', $node->get('field_landing_page_show_social'));
        $node->setNewRevision(FALSE);
        $node->save();
      }
    }
  }
}

/**
 * Renamed field_page_feature_image to field_featured_image.
 */
function tide_landing_page_update_8002() {
  module_load_include('inc', 'tide_core', 'includes/helpers');
  $config_location = [drupal_get_path('module', 'tide_landing_page') . '/config/install'];
  _tide_import_single_config('field.field.node.landing_page.field_featured_image', $config_location);

  $pages = \Drupal::entityTypeManager()->getStorage('node')
    ->loadByProperties(['type' => 'landing_page']);
  if ($pages && count($pages)) {
    /** @var \Drupal\node\Entity\Node $node */
    foreach ($pages as $node) {
      if ($node->hasField('field_featured_image') && $node->hasField('field_page_feature_image')) {
        $node->set('field_featured_image', $node->get('field_page_feature_image'));
        $node->setNewRevision(FALSE);
        $node->save();
      }
    }
  }
}

/**
 * Replace body with summary field.
 */
function tide_landing_page_update_8003() {
  module_load_include('inc', 'tide_core', 'includes/helpers');
  $config_location = [drupal_get_path('module', 'tide_landing_page') . '/config/install'];
  _tide_import_single_config('field.storage.node.field_landing_page_summary', $config_location);
  _tide_import_single_config('field.field.node.landing_page.field_landing_page_summary', $config_location);

  $pages = \Drupal::entityTypeManager()->getStorage('node')
    ->loadByProperties(['type' => 'landing_page']);
  if ($pages && count($pages)) {
    /** @var \Drupal\node\Entity\Node $node */
    foreach ($pages as $node) {
      if ($node->hasField('body') && $node->hasField('field_landing_page_summary')) {
        $node->set('field_landing_page_summary', $node->get('body')->summary);
        $node->setNewRevision(FALSE);
        $node->save();
      }
    }
  }
}
